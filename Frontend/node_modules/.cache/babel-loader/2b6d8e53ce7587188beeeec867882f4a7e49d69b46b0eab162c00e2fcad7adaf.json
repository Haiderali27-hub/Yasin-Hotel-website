{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\DELL\\\\Desktop\\\\Yasin Heaven Star Hotel\\\\Frontend\\\\src\\\\contexts\\\\AdminContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminContext = /*#__PURE__*/createContext();\nexport const useAdmin = () => {\n  _s();\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n_s(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AdminProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  const [adminInfo, setAdminInfo] = useState(null);\n  useEffect(() => {\n    // Check if admin is logged in\n    const token = localStorage.getItem('adminToken');\n    const admin = localStorage.getItem('adminInfo');\n    if (token && admin) {\n      setIsAdminLoggedIn(true);\n      setAdminInfo(JSON.parse(admin));\n    }\n  }, []);\n  const loginAdmin = (token, admin) => {\n    localStorage.setItem('adminToken', token);\n    localStorage.setItem('adminInfo', JSON.stringify(admin));\n    setIsAdminLoggedIn(true);\n    setAdminInfo(admin);\n  };\n  const logoutAdmin = () => {\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminInfo');\n    localStorage.removeItem('userType');\n    setIsAdminLoggedIn(false);\n    setAdminInfo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: {\n      isAdminLoggedIn,\n      adminInfo,\n      loginAdmin,\n      logoutAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(AdminProvider, \"ceNK86+8QQ7UmtEGIAfxe3GPDso=\");\n_c = AdminProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AdminContext","useAdmin","_s","context","Error","AdminProvider","children","_s2","isAdminLoggedIn","setIsAdminLoggedIn","adminInfo","setAdminInfo","token","localStorage","getItem","admin","JSON","parse","loginAdmin","setItem","stringify","logoutAdmin","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/DELL/Desktop/Yasin Heaven Star Hotel/Frontend/src/contexts/AdminContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\n\nconst AdminContext = createContext();\n\nexport const useAdmin = () => {\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n\nexport const AdminProvider = ({ children }) => {\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false);\n  const [adminInfo, setAdminInfo] = useState(null);\n\n  useEffect(() => {\n    // Check if admin is logged in\n    const token = localStorage.getItem('adminToken');\n    const admin = localStorage.getItem('adminInfo');\n    \n    if (token && admin) {\n      setIsAdminLoggedIn(true);\n      setAdminInfo(JSON.parse(admin));\n    }\n  }, []);\n\n  const loginAdmin = (token, admin) => {\n    localStorage.setItem('adminToken', token);\n    localStorage.setItem('adminInfo', JSON.stringify(admin));\n    setIsAdminLoggedIn(true);\n    setAdminInfo(admin);\n  };\n\n  const logoutAdmin = () => {\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminInfo');\n    localStorage.removeItem('userType');\n    setIsAdminLoggedIn(false);\n    setAdminInfo(null);\n  };\n\n  return (\n    <AdminContext.Provider value={{\n      isAdminLoggedIn,\n      adminInfo,\n      loginAdmin,\n      logoutAdmin\n    }}>\n      {children}\n    </AdminContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,IAAIG,KAAK,EAAE;MAClBN,kBAAkB,CAAC,IAAI,CAAC;MACxBE,YAAY,CAACK,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGA,CAACN,KAAK,EAAEG,KAAK,KAAK;IACnCF,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEP,KAAK,CAAC;IACzCC,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,SAAS,CAACL,KAAK,CAAC,CAAC;IACxDN,kBAAkB,CAAC,IAAI,CAAC;IACxBE,YAAY,CAACI,KAAK,CAAC;EACrB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBR,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC;IACrCT,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;IACnCb,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC5BhB,eAAe;MACfE,SAAS;MACTQ,UAAU;MACVG;IACF,CAAE;IAAAf,QAAA,EACCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,GAAA,CAxCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}