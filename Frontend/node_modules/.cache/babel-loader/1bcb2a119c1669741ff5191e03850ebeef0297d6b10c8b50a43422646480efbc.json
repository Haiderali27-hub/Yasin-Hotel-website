{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"css\", {\n  enumerable: true,\n  get: function () {\n    return _system.css;\n  }\n});\nexports.globalCss = globalCss;\nexports.internal_createExtendSxProp = internal_createExtendSxProp;\nObject.defineProperty(exports, \"keyframes\", {\n  enumerable: true,\n  get: function () {\n    return _system.keyframes;\n  }\n});\nObject.defineProperty(exports, \"styled\", {\n  enumerable: true,\n  get: function () {\n    return _styled.default;\n  }\n});\nObject.defineProperty(exports, \"useTheme\", {\n  enumerable: true,\n  get: function () {\n    return _useTheme.default;\n  }\n});\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _styleFunctionSx = require(\"@mui/system/styleFunctionSx\");\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\nvar _GlobalStyles = _interopRequireDefault(require(\"../GlobalStyles\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _system = require(\"@mui/system\");\nvar _styled = _interopRequireDefault(require(\"../styles/styled\"));\nfunction globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (/*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      (0, _jsxRuntime.jsx)(_GlobalStyles.default, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction internal_createExtendSxProp() {\n  return _styleFunctionSx.extendSxProp;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}