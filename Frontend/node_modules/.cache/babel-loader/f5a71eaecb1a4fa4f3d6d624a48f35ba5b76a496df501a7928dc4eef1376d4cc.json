{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Yasin Heaven Star Hotel\\\\Frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authUtils } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requireAuth = true,\n  redirectTo = '/login'\n}) => {\n  _s();\n  const location = useLocation();\n  const isAuthenticated = authUtils.isAuthenticated();\n  if (requireAuth && !isAuthenticated) {\n    // Save the intended destination before redirecting to login\n    localStorage.setItem('redirectAfterLogin', location.pathname);\n\n    // Show an alert to inform the user\n    alert('Please log in to access this page. You will be redirected back after login.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  if (!requireAuth && isAuthenticated) {\n    // If user is already authenticated and trying to access auth pages, redirect to home\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useLocation","authUtils","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAuth","redirectTo","_s","location","isAuthenticated","localStorage","setItem","pathname","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Yasin Heaven Star Hotel/Frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\nimport { authUtils } from '../services/api';\n\nconst ProtectedRoute = ({ children, requireAuth = true, redirectTo = '/login' }) => {\n  const location = useLocation();\n  const isAuthenticated = authUtils.isAuthenticated();\n  \n  if (requireAuth && !isAuthenticated) {\n    // Save the intended destination before redirecting to login\n    localStorage.setItem('redirectAfterLogin', location.pathname);\n    \n    // Show an alert to inform the user\n    alert('Please log in to access this page. You will be redirected back after login.');\n    \n    return <Navigate to={redirectTo} replace />;\n  }\n  \n  if (!requireAuth && isAuthenticated) {\n    // If user is already authenticated and trying to access auth pages, redirect to home\n    return <Navigate to=\"/\" replace />;\n  }\n  \n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW,GAAG,IAAI;EAAEC,UAAU,GAAG;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,eAAe,GAAGT,SAAS,CAACS,eAAe,CAAC,CAAC;EAEnD,IAAIJ,WAAW,IAAI,CAACI,eAAe,EAAE;IACnC;IACAC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEH,QAAQ,CAACI,QAAQ,CAAC;;IAE7D;IACAC,KAAK,CAAC,6EAA6E,CAAC;IAEpF,oBAAOX,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAER,UAAW;MAACS,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,IAAI,CAACd,WAAW,IAAII,eAAe,EAAE;IACnC;IACA,oBAAOP,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOf,QAAQ;AACjB,CAAC;AAACG,EAAA,CApBIJ,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAqB,EAAA,GADxBjB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}